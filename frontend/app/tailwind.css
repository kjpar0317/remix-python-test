@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme {
	--font-sans:
		Inter, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji,
		Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;

	--color-background: var(--background);
	--color-foreground: var(--foreground);

	--animate-fade-in-scale: fade-in-scale 0.3s ease-out;
	--animate-opacity-scale-in: opacity-scale-in 0.5s ease-out forwards;
	--animate-opacity-scale-out: opacity-scale-out 0.5s ease-out forwards;
	--animate-slide-in: slide-in 0.5s ease-out forwards;
	--animate-slide-up: slide-up 0.5s ease-out forwards;
	--animate-slide-down: slide-down 0.5s ease-out forwards;
	--animate-scale-up: scale-up 0.3s ease-out forwards;
	--animate-scale-up-ydown: scale-up-ydown 0.3s ease-out forwards;
	--animate-wiggle: wiggle 1s ease-in-out infinite;
	--animate-rotate-3d: rotate-3d 2s ease-in-out;
	--animate-expand: expand 0.5s ease-in-out forwards;

	/* animate-[fade-in-scale-in_0.5s_ease-out_forwards] */
	@keyframes fade-in-scale {
		0% {
			opacity: 0;
			transform: scale(0.85);
		}
		100% {
			opacity: 1;
			transform: scale(1);
		}
	}

	/* animate-[fade-out-scale-in_0.5s_ease-out_forwards] */
	@keyframes fade-out-scale {
		0% {
			opacity: 1;
			transform: scale(1);
		}
		100% {
			opacity: 0;
			transform: scale(0.8);
		}
	}

	/* animate-[opacity-slide-in_0.5s_ease-out_forwards] */
	@keyframes opacity-scale-in {
		0% {
			opacity: 0;
			transform: scale(0);
		}
		100% {
			opacity: 1;
			transform: scale(1);
		}
	}

	/* animate-[opacity-slide-out_0.5s_ease-out_forwards] */
	@keyframes opacity-scale-out {
		0% {
			opacity: 1;
			transform: scale(1);
		}
		100% {
			opacity: 0;
			transform: scale(0);
		}
	}

	/* animate-[slide-in_0.5s_ease-out_forwards] */
	@keyframes slide-in {
		0% {
			transform: translateX(-100%);
			opacity: 0;
		}
		100% {
			transform: translateX(0);
			opacity: 1;
		}
	}
	/* animate-[slide-up_0.5s_ease-out_0.5s_forwards] */
	/* animate-[slide-up_0.8s_ease-out_0.5s_forwards] */
	/* animate-[slide-up_1.0s_ease-out_0.5s_forwards] */
	@keyframes slide-up {
		0% {
			opacity: 0;
			transform: translateY(50px) scale(0.85);
		}
		100% {
			opacity: 1;
			transform: translateY(0) scale(1);
		}
	}

	@keyframes slide-down {
		0% {
			opacity: 0;
			transform: translateY(-50px) scale(0.85);
		}
		100% {
			opacity: 1;
			transform: translateY(0) scale(1);
		}
	}

	@keyframes scale-up {
		0% {
			transform: scale(1);
		}
		100% {
			transform: scale(1.2);
		}
	}

	@keyframes scale-up-ydown {
		0% {
			transform: translateY(0) scale(1);
			background-color: var(--background); /* 기존 배경색 */
			z-index: 1;
		}
		100% {
			transform: translateY(20) scale(1.1);
			background-color: rgb(231, 230, 230); /* 어두운 색으로 변경 */
			z-index: 999;
		}
	}

	@keyframes wiggle {
		0%,
		100% {
			transform: rotate(-3deg);
		}
		50% {
			transform: rotate(3deg);
		}
	}

	@keyframes rotate-3d {
		0% {
			transform: rotate3d(1, 0, 1, 3deg) rotateX(51deg) rotateZ(43deg);
		}
		100% {
			transform: none;
		}
	}

	/* @keyframes rotate-3d {
    0%, 100% {
      transform: rotate3d(1, 0, 1, -3deg) rotateX(-51deg) rotateZ(-43deg);
    }
    50% {
      transform: rotate3d(1, 0, 1, 3deg) rotateX(51deg) rotateZ(43deg);
    }
  } */

	/* animate-[expand_0.5s_ease-in-out_forwards] */
	@keyframes expand {
    0% { width: '0' },
    100% { width: '100%' }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentcolor);
	}
	button:not([disabled]),
	[role="button"]:not([disabled]) {
		cursor: pointer;
	}
}

html,
body {
	@apply bg-white dark:bg-gray-950;

	@media (prefers-color-scheme: dark) {
		color-scheme: dark;
	}
}

@theme inline {
	--radius-sm: calc(var(--radius) - 4px);
	--radius-md: calc(var(--radius) - 2px);
	--radius-lg: var(--radius);
	--radius-xl: calc(var(--radius) + 4px);
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--color-card: var(--card);
	--color-card-foreground: var(--card-foreground);
	--color-popover: var(--popover);
	--color-popover-foreground: var(--popover-foreground);
	--color-primary: var(--primary);
	--color-primary-foreground: var(--primary-foreground);
	--color-secondary: var(--secondary);
	--color-secondary-foreground: var(--secondary-foreground);
	--color-muted: var(--muted);
	--color-muted-foreground: var(--muted-foreground);
	--color-accent: var(--accent);
	--color-accent-foreground: var(--accent-foreground);
	--color-destructive: var(--destructive);
	--color-border: var(--border);
	--color-input: var(--input);
	--color-ring: var(--ring);
	--color-chart-1: var(--chart-1);
	--color-chart-2: var(--chart-2);
	--color-chart-3: var(--chart-3);
	--color-chart-4: var(--chart-4);
	--color-chart-5: var(--chart-5);
	--color-sidebar: var(--sidebar);
	--color-sidebar-foreground: var(--sidebar-foreground);
	--color-sidebar-primary: var(--sidebar-primary);
	--color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
	--color-sidebar-accent: var(--sidebar-accent);
	--color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
	--color-sidebar-border: var(--sidebar-border);
	--color-sidebar-ring: var(--sidebar-ring);
}

:root {
	--radius: 0.625rem;
	--background: oklch(1 0 0);
	--foreground: oklch(0.145 0 0);
	--card: oklch(1 0 0);
	--card-foreground: oklch(0.145 0 0);
	--popover: oklch(1 0 0);
	--popover-foreground: oklch(0.145 0 0);
	--primary: oklch(0.205 0 0);
	--primary-foreground: oklch(0.985 0 0);
	--secondary: oklch(0.97 0 0);
	--secondary-foreground: oklch(0.205 0 0);
	--muted: oklch(0.97 0 0);
	--muted-foreground: oklch(0.556 0 0);
	--accent: oklch(0.97 0 0);
	--accent-foreground: oklch(0.205 0 0);
	--destructive: oklch(0.577 0.245 27.325);
	--border: oklch(0.922 0 0);
	--input: oklch(0.922 0 0);
	--ring: oklch(0.708 0 0);
	--chart-1: oklch(0.646 0.222 41.116);
	--chart-2: oklch(0.6 0.118 184.704);
	--chart-3: oklch(0.398 0.07 227.392);
	--chart-4: oklch(0.828 0.189 84.429);
	--chart-5: oklch(0.769 0.188 70.08);
	--sidebar: oklch(0.985 0 0);
	--sidebar-foreground: oklch(0.145 0 0);
	--sidebar-primary: oklch(0.205 0 0);
	--sidebar-primary-foreground: oklch(0.985 0 0);
	--sidebar-accent: oklch(0.97 0 0);
	--sidebar-accent-foreground: oklch(0.205 0 0);
	--sidebar-border: oklch(0.922 0 0);
	--sidebar-ring: oklch(0.708 0 0);
}

.dark {
	--background: oklch(0.145 0 0);
	--foreground: oklch(0.985 0 0);
	--card: oklch(0.205 0 0);
	--card-foreground: oklch(0.985 0 0);
	--popover: oklch(0.205 0 0);
	--popover-foreground: oklch(0.985 0 0);
	--primary: oklch(0.922 0 0);
	--primary-foreground: oklch(0.205 0 0);
	--secondary: oklch(0.269 0 0);
	--secondary-foreground: oklch(0.985 0 0);
	--muted: oklch(0.269 0 0);
	--muted-foreground: oklch(0.708 0 0);
	--accent: oklch(0.269 0 0);
	--accent-foreground: oklch(0.985 0 0);
	--destructive: oklch(0.704 0.191 22.216);
	--border: oklch(1 0 0 / 10%);
	--input: oklch(1 0 0 / 15%);
	--ring: oklch(0.556 0 0);
	--chart-1: oklch(0.488 0.243 264.376);
	--chart-2: oklch(0.696 0.17 162.48);
	--chart-3: oklch(0.769 0.188 70.08);
	--chart-4: oklch(0.627 0.265 303.9);
	--chart-5: oklch(0.645 0.246 16.439);
	--sidebar: oklch(0.205 0 0);
	--sidebar-foreground: oklch(0.985 0 0);
	--sidebar-primary: oklch(0.488 0.243 264.376);
	--sidebar-primary-foreground: oklch(0.985 0 0);
	--sidebar-accent: oklch(0.269 0 0);
	--sidebar-accent-foreground: oklch(0.985 0 0);
	--sidebar-border: oklch(1 0 0 / 10%);
	--sidebar-ring: oklch(0.556 0 0);
}

@layer base {
	* {
		@apply border-border outline-ring/50;
	}
	body {
		@apply bg-background text-foreground;
	}
}
